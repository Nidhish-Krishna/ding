
Sample Script #2

 * In this script, we will declare a packet
 * We will assign values to the members of the packet
 * We will assign values from already declared variables
 * And we will print the packet and all its members

.decl:
  packet my_packet       ! A packet is declared

  mac dest_mac, src_mac     ! mac variables for members
  number ether_type, crc    ! number variables for members
  string str_payload      ! string variable for payload

.func:
  !!! Block in which user defined functions are written
  !!! User Defined Function feature is not yet developed/implemented
  !!! Any Code inside this block will be ignored by the interpreter

.flow:
  dest_mac = ff-dd-ee-cc-bb-aa
  src_mac = 11-22-33-44-55-66
  ether_type = 2048:2B
  crc=1:4B

  str_payload = "Hello World !"

  ! variables for members are defined with respective values

  my_packet = container("ETHER")

  ! Empty Ether container for the packet is created
  ! The packet structure has been defined to be Ether

  my_packet.DEST_MAC = dest_mac
  my_packet.SRC_MAC = src_mac
  my_packet.TYPE = ether_type
  my_packet.CRC = crc

  my_packet.PAYLOAD = str_payload

  ! Ether Packet has been defined

  ! All member variables have been assigned values
  ! Let us print them all

  print("Printing all the member variables' values...")
  print("--------------------------------------------")
  print()

  ! print() without arguments prints an empty line

  print("Destination MAC: ", my_packet.DEST_MAC)
  print("Source MAC: ", my_packet.SRC_MAC)
  print("Ether Type: ", my_packet.TYPE)
  print("CRC: ", my_packet.CRC)
  print("Payload: ", my_packet.PAYLOAD)

  ! Payload can also be of packet type or stream type
  ! One packet can be payload to another packet

  print()
  print("Let us print the whole packet...")
  print(my_packet)

  print()
  print("We have printed all the values !")

